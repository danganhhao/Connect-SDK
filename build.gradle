buildscript {
    repositories {
        google()
        mavenCentral()
        mavenLocal()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:7.4.2'
    }
}

allprojects {
    repositories {
        google()
        mavenCentral()
        mavenLocal()
        maven { url "https://jitpack.io" }
    }
}

apply plugin: 'com.android.library'
apply plugin: 'jacoco'

group='com.github.ConnectSDK'

jacoco {
    toolVersion = "0.7.1.201405082137"
}

task jacocoTestReport(type:JacocoReport, dependsOn: "check") {
    group = "Reporting"

    description = "Generate Jacoco coverage reports"

    getClassDirectories().setFrom(
            dir: 'build/intermediates/classes/debug',
            excludes: ['**/R.class',
                       '**/R$*.class',
                       '**/*$ViewInjector*.*',
                       '**/BuildConfig.*',
                       '**/Manifest*.*']
    )

    additionalSourceDirs.from = android.sourceSets.main.java.srcDirs
    sourceDirectories.from = android.sourceSets.main.java.srcDirs
    executionData.from = 'build/jacoco/testDebug.exec'

    reports {
        xml.enabled = true
        html.enabled = true
    }

}

build.dependsOn jacocoTestReport

android {
    compileSdkVersion 33
    buildToolsVersion '30.0.3'

    namespace "com.connectsdk"

    defaultConfig {
        minSdkVersion 23
        targetSdkVersion 33
    }

    packagingOptions {
        exclude 'LICENSE.txt'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE'
    }

    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = [
                    'src',
                    'core/src',
                    'modules/google_cast/src',
                    'modules/firetv/src',
            ]
            resources.srcDirs = ['src']
            aidl.srcDirs = ['src']
            renderscript.srcDirs = ['src']
            res.srcDirs = ['core/res']
            assets.srcDirs = ['assets']
            jniLibs.srcDirs = ['core/jniLibs']
        }
        test {
            java.srcDirs = [
                    'core/test/src',
                    'modules/google_cast/test/src',
                    'modules/firetv/test/src',
            ]
        }
    }
    buildTypes {
        debug {
            testCoverageEnabled = true
        }
        release {
            minifyEnabled false
        }
    }
    android {
        lintOptions {
            abortOnError false
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    useLibrary 'org.apache.http.legacy'
    ndkVersion '28.2.13676358'
}

android.testOptions.unitTests.all {
    include '**/*Test.class'
}

dependencies {
    implementation 'org.java-websocket:Java-WebSocket:1.5.0'
    implementation 'javax.jmdns:jmdns:3.4.1'

    implementation fileTree(dir: 'modules/firetv/libs', include: '*.jar')


    implementation 'androidx.mediarouter:mediarouter:1.8.1'
    implementation 'androidx.annotation:annotation:1.0.0'
    implementation 'androidx.preference:preference:1.1.1'
    implementation 'androidx.appcompat:appcompat:1.7.1'  // 1.4.1 version doesn't support compile sdk 30
    implementation 'com.googlecode.plist:dd-plist:1.23'
    implementation 'com.nimbusds:srp6a:2.1.0'
    implementation 'net.i2p.crypto:eddsa:0.3.0'
    implementation 'com.google.android.gms:play-services-cast-framework:9.4.0'
    implementation files('core/libs/lgcast-android-lib.jar')

    testImplementation 'org.apache.maven:maven-ant-tasks:2.1.3'
    testImplementation 'junit:junit:4.12'
    testImplementation 'org.robolectric:robolectric:2.4'
    testImplementation 'org.mockito:mockito-all:1.10.19'
    testImplementation 'org.powermock:powermock-api-mockito:1.6.2'
    testImplementation 'xmlunit:xmlunit:1.4'
}

apply from: 'maven-push.gradle'
